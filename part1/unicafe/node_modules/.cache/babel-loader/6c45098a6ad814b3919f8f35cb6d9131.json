{"ast":null,"code":"import _defineProperty from \"/Volumes/mydrive/fullstackopen2019/part1/unicafe/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"/Volumes/mydrive/fullstackopen2019/part1/unicafe/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Volumes/mydrive/fullstackopen2019/part1/unicafe/src/index.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState } from 'react';\nimport ReactDOM from 'react-dom';\n\nconst Statistics = ({\n  clicks\n}) => {\n  const good = clicks.good,\n        neutral = clicks.neutral,\n        bad = clicks.bad;\n\n  if (!(good + bad + neutral)) {\n    return React.createElement(React.Fragment, null, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 9\n      },\n      __self: this\n    }, \"statistics\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 10\n      },\n      __self: this\n    }, \"No feedback given\"));\n  } else {\n    return React.createElement(React.Fragment, null, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15\n      },\n      __self: this\n    }, \"statistics\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16\n      },\n      __self: this\n    }, \"good \", good), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17\n      },\n      __self: this\n    }, \"neutral \", neutral), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18\n      },\n      __self: this\n    }, \"bad \", bad), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19\n      },\n      __self: this\n    }, \"all \", good + neutral + bad ? good + neutral + bad : 0), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20\n      },\n      __self: this\n    }, \"average \", good + neutral + bad ? (good + 0 * neutral + -1 * bad) / (good + neutral + bad) : 0), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    }, \"positive \", good + neutral + bad ? good * 100 / (good + neutral + bad) : 0));\n  }\n};\n\nconst Button = ({\n  buttonDetails\n}) => {\n  console.log(buttonDetails);\n  const text = buttonDetails.text,\n        clicks = buttonDetails.clicks,\n        handleClick = buttonDetails.handleClick;\n  return React.createElement(\"button\", {\n    onClick: handleClick,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, \" \", text, \" \");\n};\n\nconst App = () => {\n  // save clicks of each button to own state\n  const _useState = useState({\n    g: 0,\n    n: 0,\n    b: 0\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        clicks = _useState2[0],\n        setClicks = _useState2[1];\n\n  const gClick = () => {\n    const newClick = _objectSpread({}, clicks, {\n      g: clicks.g + 1\n    });\n\n    setClicks(newClick);\n  };\n\n  const nClick = () => {\n    const newClick = _objectSpread({}, clicks, {\n      n: clicks.n + 1\n    });\n\n    setClicks(newClick);\n  };\n\n  const bClick = () => {\n    const newClick = _objectSpread({}, clicks, {\n      n: clicks.n + 1\n    });\n\n    setClicks(newClick);\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, \"give feedback\"), React.createElement(Button, {\n    buttonDetails: {\n      text: \"good\",\n      clicks,\n      handleClick: gClick\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }), React.createElement(Button, {\n    buttonDetails: {\n      text: \"neutral\",\n      clicks,\n      handleClick: nClick\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }), React.createElement(Button, {\n    buttonDetails: {\n      text: \"bad\",\n      clicks,\n      handleClick: bClick\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }), React.createElement(Statistics, {\n    clicks: clicks,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }));\n};\n\nReactDOM.render(React.createElement(App, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 72\n  },\n  __self: this\n}), document.getElementById('root'));","map":{"version":3,"sources":["/Volumes/mydrive/fullstackopen2019/part1/unicafe/src/index.js"],"names":["React","useState","ReactDOM","Statistics","clicks","good","neutral","bad","Button","buttonDetails","console","log","text","handleClick","App","g","n","b","setClicks","gClick","newClick","nClick","bClick","render","document","getElementById"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport ReactDOM from 'react-dom'\n\nconst Statistics=({clicks})=>{\n   \n    const {good,neutral,bad}=clicks\n    if(!(good+bad+neutral)){\n        return (<>\n        <h1>statistics</h1>\n        <p>No feedback given</p>\n        </>)\n    }else{\n        return (\n            <>\n          <h1>statistics</h1>\n          <p>good {good}</p> \n          <p>neutral {neutral}</p>\n          <p>bad {bad}</p>\n          <p>all {(good+neutral+bad)?(good+neutral+bad):0}</p>\n          <p>average {(good+neutral+bad)?(good+0*neutral+-1*bad)/(good+neutral+bad):0}</p>\n          <p>positive {(good+neutral+bad)?good*100/(good+neutral+bad):0}</p> \n          </>\n        )\n    }\n}\n\nconst Button = ({buttonDetails})=>{\n    console.log(buttonDetails)\n const {text,clicks,handleClick}= buttonDetails\n return (<button onClick={handleClick}> {text} </button>)\n}\n\nconst App = () => {\n  // save clicks of each button to own state\n  const [clicks,setClicks] = useState({g:0,n:0,b:0})\n  const gClick=()=>{\n      const newClick={\n          ...clicks,\n          g:clicks.g+1\n      }\n      setClicks(newClick) \n  }\n\nconst nClick=()=>{\n    const newClick={\n        ...clicks,\n        n:clicks.n+1\n    }\n    setClicks(newClick) \n}\n\n\nconst bClick=()=>{\n    const newClick={\n        ...clicks,\n        n:clicks.n+1\n    }\n    setClicks(newClick) \n}\n\n  return (\n    <div>\n      <h1>give feedback</h1>\n      <Button buttonDetails={{text:\"good\",clicks,handleClick:gClick}}/>\n      <Button buttonDetails={{text:\"neutral\",clicks,handleClick:nClick}}/>\n      <Button buttonDetails={{text:\"bad\",clicks,handleClick:bClick}}/>\n      <Statistics clicks={clicks}/>\n    </div>\n  )\n}\n\nReactDOM.render(<App />, \n  document.getElementById('root')\n)"]},"metadata":{},"sourceType":"module"}