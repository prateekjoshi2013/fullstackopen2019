{"ast":null,"code":"import _slicedToArray from \"/Volumes/mydrive/fullstackopen2019/part1/unicafe/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Volumes/mydrive/fullstackopen2019/part1/unicafe/src/index.js\";\nimport React, { useState } from 'react';\nimport ReactDOM from 'react-dom';\n\nconst App = () => {\n  // save clicks of each button to own state\n  const _useState = useState(0),\n        _useState2 = _slicedToArray(_useState, 2),\n        good = _useState2[0],\n        setGood = _useState2[1];\n\n  const _useState3 = useState(0),\n        _useState4 = _slicedToArray(_useState3, 2),\n        neutral = _useState4[0],\n        setNeutral = _useState4[1];\n\n  const _useState5 = useState(0),\n        _useState6 = _slicedToArray(_useState5, 2),\n        bad = _useState6[0],\n        setBad = _useState6[1];\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, \"give feedback\"), React.createElement(\"button\", {\n    onClick: () => {\n      setGood(good + 1);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }, \" good \"), React.createElement(\"button\", {\n    onClick: onClick = () => {\n      setNeutral(neutral + 1);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, \" neutral \"), React.createElement(\"button\", {\n    onClick: onClick = () => {\n      setBad(bad + 1);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, \" bad \"), React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, \"statistics\"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, \"good \", good), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, \"neutral \", neutral), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, \"bad \", bad), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, \"all \", good + neutral + bad), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, \"average \", (good + 0 * neutral + -1 * bad) / (good + neutral + bad), \"}\"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, \"positive \", good * 100 / (good + neutral + bad)));\n};\n\nReactDOM.render(React.createElement(App, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 28\n  },\n  __self: this\n}), document.getElementById('root'));","map":{"version":3,"sources":["/Volumes/mydrive/fullstackopen2019/part1/unicafe/src/index.js"],"names":["React","useState","ReactDOM","App","good","setGood","neutral","setNeutral","bad","setBad","onClick","render","document","getElementById"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,QAAP,MAAqB,WAArB;;AAEA,MAAMC,GAAG,GAAG,MAAM;AAChB;AADgB,oBAEQF,QAAQ,CAAC,CAAD,CAFhB;AAAA;AAAA,QAETG,IAFS;AAAA,QAEHC,OAFG;;AAAA,qBAGcJ,QAAQ,CAAC,CAAD,CAHtB;AAAA;AAAA,QAGTK,OAHS;AAAA,QAGAC,UAHA;;AAAA,qBAIMN,QAAQ,CAAC,CAAD,CAJd;AAAA;AAAA,QAITO,GAJS;AAAA,QAIJC,MAJI;;AAMhB,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADF,EAEE;AAAQ,IAAA,OAAO,EAAE,MAAI;AAACJ,MAAAA,OAAO,CAACD,IAAI,GAAC,CAAN,CAAP;AAAgB,KAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,EAGE;AAAQ,IAAA,OAAO,EAAEM,OAAO,GAAC,MAAI;AAACH,MAAAA,UAAU,CAACD,OAAO,GAAC,CAAT,CAAV;AAAsB,KAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAHF,EAIE;AAAQ,IAAA,OAAO,EAAEI,OAAO,GAAC,MAAI;AAACD,MAAAA,MAAM,CAACD,GAAG,GAAC,CAAL,CAAN;AAAc,KAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAJF,EAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBALF,EAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAASJ,IAAT,CANF,EAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAYE,OAAZ,CAPF,EAQE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAQE,GAAR,CARF,EASE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAQJ,IAAI,GAACE,OAAL,GAAaE,GAArB,CATF,EAUE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAY,CAACJ,IAAI,GAAC,IAAEE,OAAP,GAAe,CAAC,CAAD,GAAGE,GAAnB,KAAyBJ,IAAI,GAACE,OAAL,GAAaE,GAAtC,CAAZ,MAVF,EAWE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAaJ,IAAI,GAAC,GAAL,IAAUA,IAAI,GAACE,OAAL,GAAaE,GAAvB,CAAb,CAXF,CADF;AAgBD,CAtBD;;AAwBAN,QAAQ,CAACS,MAAT,CAAgB,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAhB,EACEC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CADF","sourcesContent":["import React, { useState } from 'react'\nimport ReactDOM from 'react-dom'\n\nconst App = () => {\n  // save clicks of each button to own state\n  const [good, setGood] = useState(0)\n  const [neutral, setNeutral] = useState(0)\n  const [bad, setBad] = useState(0)\n\n  return (\n    <div>\n      <h1>give feedback</h1>\n      <button onClick={()=>{setGood(good+1)}}> good </button>\n      <button onClick={onClick=()=>{setNeutral(neutral+1)}}> neutral </button>\n      <button onClick={onClick=()=>{setBad(bad+1)}}> bad </button>\n      <h1>statistics</h1>\n      <p>good {good}</p>\n      <p>neutral {neutral}</p>\n      <p>bad {bad}</p>\n      <p>all {good+neutral+bad}</p>\n      <p>average {(good+0*neutral+-1*bad)/(good+neutral+bad)}}</p>\n      <p>positive {good*100/(good+neutral+bad)}</p>\n\n    </div>\n  )\n}\n\nReactDOM.render(<App />, \n  document.getElementById('root')\n)"]},"metadata":{},"sourceType":"module"}